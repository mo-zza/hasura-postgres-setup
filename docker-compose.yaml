version: '3'
services:
  postgres:
    # image: postgres:13.1
    container_name: postgres
    build:
      dockerfile: Dockerfile
      context: ./postgres
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ./postgres/conf/postgresql.conf:/tmp/postgresql.conf
      - ./postgres/${POSTGRES_VOLUME}:/var/lib/postgresql/data/pgdata
    # command: "postgres -c config_file=/tmp/postgres.conf"
    # command: "postgres -c max_connections=${MAX_CONNECTIONS} -c shared_buffers=${SHARED_BUFFERS} -c effective_cache_size=${EFFECTIVE_CACHE_SIZE} -c maintenance_work_mem=${MAINTENANCE_WORK_MEM} -c checkpoint_completion_target=${CHECKPOINT_COMPLETION_TARGET} -c wal_buffers=${WAL_BUFFERS} -c default_statistics_target=${DEFAULT_STATISTICS_TARGET} -c random_page_cost=${RANDOM_PAGE_COST} -c effective_io_concurrency=${EFFECTIVE_IO_CONCURRENCY} -c work_mem=${WORK_MEM} -c min_wal_size=${MIN_WAL_SIZE} -c max_wal_size=${MAX_WAL_SIZE} -c max_worker_processes=${MAX_WORKER_PROCESSES} -c max_parallel_workers_per_gather=${MAX_PARALLEL_WORKERS_PER_GATHER} -c max_parallel_workers=${MAX_PARALLEL_WORKERS} -c max_parallel_maintenance_workers=${MAX_PARALLEL_MAINTENANCE_WORKERS}"
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    depends_on:
      - postgres
    ports:
      - "${PGADMIN_PORT}:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}

  graphql-engine:
    image: hasura/graphql-engine:v1.3.1
    container_name: lit-hasura
    restart: always
    ports:
      - "${HASURA_GRAPHQL_PORT}:8080"
    # depends_on:
    #     - "postgres"
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to set an admin secret
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
#      HASURA_GRAPHQL_JWT_SECRET: "${HASURA_GRAPHQL_JWT_SECRET}"
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: anonymous